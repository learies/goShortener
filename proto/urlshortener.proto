syntax = "proto3";

package urlshortener;

option go_package = "github.com/learies/goShortener/proto";

// URLShortener service definition
service URLShortener {
  // Create a short URL
  rpc CreateShortURL(CreateShortURLRequest) returns (CreateShortURLResponse) {}
  
  // Get original URL by short URL
  rpc GetOriginalURL(GetOriginalURLRequest) returns (GetOriginalURLResponse) {}
  
  // Create multiple short URLs in batch
  rpc CreateBatchShortURL(CreateBatchShortURLRequest) returns (CreateBatchShortURLResponse) {}
  
  // Get all URLs for a user
  rpc GetUserURLs(GetUserURLsRequest) returns (GetUserURLsResponse) {}
  
  // Delete URLs for a user
  rpc DeleteUserURLs(DeleteUserURLsRequest) returns (DeleteUserURLsResponse) {}
  
  // Get service statistics
  rpc GetStats(GetStatsRequest) returns (GetStatsResponse) {}
}

// Request/Response messages
message CreateShortURLRequest {
  string url = 1;
}

message CreateShortURLResponse {
  string result = 1;
}

message GetOriginalURLRequest {
  string short_url = 1;
}

message GetOriginalURLResponse {
  string original_url = 1;
}

message CreateBatchShortURLRequest {
  repeated BatchURLRequest urls = 1;
}

message BatchURLRequest {
  string correlation_id = 1;
  string original_url = 2;
}

message CreateBatchShortURLResponse {
  repeated BatchURLResponse urls = 1;
}

message BatchURLResponse {
  string correlation_id = 1;
  string short_url = 2;
}

message GetUserURLsRequest {
  string user_id = 1;
}

message GetUserURLsResponse {
  repeated UserURL urls = 1;
}

message UserURL {
  string short_url = 1;
  string original_url = 2;
}

message DeleteUserURLsRequest {
  string user_id = 1;
  repeated string short_urls = 2;
}

message DeleteUserURLsResponse {
  bool success = 1;
}

message GetStatsRequest {}

message GetStatsResponse {
  int32 urls_count = 1;
  int32 users_count = 2;
} 